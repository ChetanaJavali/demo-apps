// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// PostRegOKCode is the HTTP code returned for type PostRegOK
const PostRegOKCode int = 200

/*PostRegOK An existing user.

swagger:response postRegOK
*/
type PostRegOK struct {

	/*
	  In: Body
	*/
	Payload *PostRegOKBody `json:"body,omitempty"`
}

// NewPostRegOK creates PostRegOK with default headers values
func NewPostRegOK() *PostRegOK {

	return &PostRegOK{}
}

// WithPayload adds the payload to the post reg o k response
func (o *PostRegOK) WithPayload(payload *PostRegOKBody) *PostRegOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post reg o k response
func (o *PostRegOK) SetPayload(payload *PostRegOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostRegOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostRegCreatedCode is the HTTP code returned for type PostRegCreated
const PostRegCreatedCode int = 201

/*PostRegCreated A new user.  FE should instruct the user to check email.

swagger:response postRegCreated
*/
type PostRegCreated struct {

	/*
	  In: Body
	*/
	Payload *PostRegCreatedBody `json:"body,omitempty"`
}

// NewPostRegCreated creates PostRegCreated with default headers values
func NewPostRegCreated() *PostRegCreated {

	return &PostRegCreated{}
}

// WithPayload adds the payload to the post reg created response
func (o *PostRegCreated) WithPayload(payload *PostRegCreatedBody) *PostRegCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post reg created response
func (o *PostRegCreated) SetPayload(payload *PostRegCreatedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostRegCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
